service: product-service

frameworkVersion: "3"

plugins:
  - serverless-webpack

custom:
  accountId: 449436809015

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-2
  httpApi:
    cors: true
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:${self:custom.accountId}:table/products"
        - "arn:aws:dynamodb:${self:provider.region}:${self:custom.accountId}:table/stock"

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - httpApi:
          path: /products
          method: get
  getProductById:
    handler: handler.getProductById
    events:
      - httpApi:
          path: /products/{id}
          method: get
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: /create
          method: post
  deleteProduct:
    handler: handler.deleteProduct
    events:
      - httpApi:
          path: /products/{id}
          method: delete

resources:
  Resources:
    ProductsTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: products
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

